using System;

class Program
{
    static void Main()
    {
        // Объявляем переменные согласно блок-схеме
        double a1, a2, a, b1, b, c1, c2, c, d, e1, e2, e3, e, g, f, result1, result2;

        // Расчёт первой переменной result1 (весь расчёт в одной строке)
        result1 = -Math.Pow(
            Math.Abs(
                (-Math.Pow((2.625 + (8 + (9.0 / 11))), 1.0 / 3)) -
                Math.Sqrt(((1.6 + 154.66 / 70.3) / 1.9) / (Math.Pow((2 + (2.0 / 5) - 1.3), 1.0 / 3) / 4.3)) +
                ((1 + (1.0 / 2) * (1.0 / 0.25)) / (6 - 46 / (1 + 2.2 * 10))) -
                (1 / Math.Sqrt(Math.PI))
            ), 1.0 / 5
        );

        // Выводим результат первого метода
        Console.WriteLine($"Результат (одной переменной): {result1}");

        // Расчёт второй переменной result2 с использованием промежуточных вычислений

        // Шаг 1: Расчёт a1, a2, a
        a1 = 2.625 + (8 + (9.0 / 11));
        a2 = Math.Pow(a1, 1.0 / 3); // Корень кубический
        a = -1 * a2;

        // Шаг 2: Расчёт b1, b
        b1 = 1.6 + 154.66 / 70.3;
        b = b1 / 1.9;

        // Шаг 3: Расчёт c1, c2, c
        c1 = 2 + (2.0 / 5) - 1.3;
        c2 = Math.Pow(c1, 1.0 / 3); // Корень кубический
        c = c2 / 4.3;

        // Шаг 4: Расчёт d
        d = Math.Sqrt(b / c); // Корень квадратный

        // Шаг 5: Расчёт e1, e2, e3, e
        e1 = 1 + (1.0 / 2) * (1.0 / 0.25);
        e2 = 46 / (1 + 2.2 * 10);
        e3 = 6 - e2;
        e = e1 / e3;

        // Шаг 6: Расчёт g
        g = 1 / Math.Sqrt(Math.PI); // Используем корень из числа π

        // Шаг 7: Расчёт f
        f = a - d + e - g;

        // Шаг 8: Расчёт result2
        result2 = -Math.Pow(Math.Abs(f), 1.0 / 5); // Корень пятой степени

        // Выводим результат второго метода
        Console.WriteLine($"Результат (несколько переменных): {result2}");

        // Ожидание ввода, чтобы программа не закрывалась сразу
        Console.ReadKey();
    }
}
